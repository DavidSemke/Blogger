{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://techstack/./public/javascripts/layouts/toolbars.js","webpack://techstack/./public/javascripts/utils/formError.js","webpack://techstack/./public/javascripts/utils/fetch.js","webpack://techstack/./public/javascripts/pages/blogPost.js","webpack://techstack/./public/javascripts/utils/queue.js","webpack://techstack/./public/javascripts/pages/userBlogPosts.js","webpack://techstack/./public/javascripts/root.js","webpack://techstack/./public/javascripts/pages/loggingForm.js","webpack://techstack/./public/javascripts/pages/blogPostForm.js","webpack://techstack/./public/javascripts/utils/tinyMCEConfig.js","webpack://techstack/./public/javascripts/pages/userProfile.js"],"sourcesContent":["function sidebarListeners(sidebarSelector, sidebarButtonSelector) {\r\n    const sidebar = document.querySelector(sidebarSelector)\r\n\r\n    if (!sidebar) {\r\n        return\r\n    }\r\n\r\n    const sidebarButton = document.querySelector(sidebarButtonSelector)\r\n\r\n    sidebarButton.addEventListener('click', () => {\r\n        \r\n        if (sidebar.classList.contains('-open')) {\r\n            sidebar.classList.remove('-open')\r\n            sidebar.classList.add('-closed')\r\n        }\r\n        else if (sidebar.classList.contains('-closed')) {\r\n            sidebar.classList.remove('-closed')\r\n            sidebar.classList.add('-open')\r\n        }\r\n    })\r\n}\r\n\r\nfunction navbarListeners() {\r\n    const navbar = document.querySelector('.navbar')\r\n\r\n    if (!navbar) {\r\n        return\r\n    }\r\n\r\n    const searchbarInput = navbar.querySelector('.searchbar__input')\r\n\r\n    if (!searchbarInput) {\r\n        return\r\n    }\r\n\r\n    const navbarDropdownContainer = document.querySelector(\r\n        '.navbar-dropdown-container'\r\n    )\r\n    searchbarInput.addEventListener('input', () => {\r\n        const encodedWords = searchbarInput\r\n            .value\r\n            .split(' ')\r\n            .filter(word => word)\r\n            .map(word => encodeURIComponent(word))\r\n\r\n        if (!encodedWords.length) {\r\n            navbarDropdownContainer.innerHTML = ''\r\n            return\r\n        }\r\n        \r\n        const href = '/blog-posts?keywords=' + encodedWords.join(',')\r\n\r\n        fetch(\r\n            href, \r\n            { method: 'GET' }\r\n        )\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error(`HTTP error - Status: ${res.status}`)\r\n                }\r\n    \r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                navbarDropdownContainer.innerHTML = data.renderedHTML\r\n            })\r\n            .catch(error => {\r\n                throw error\r\n            })\r\n    })\r\n    searchbarInput.addEventListener('blur', (event) => {\r\n        const newFocus = event.relatedTarget\r\n        \r\n        // check to see if link has been clicked\r\n        if (!newFocus || !navbarDropdownContainer.contains(newFocus)) {\r\n            navbarDropdownContainer.classList.add('-gone')\r\n        }\r\n    })\r\n    searchbarInput.addEventListener('focus', () => {\r\n        navbarDropdownContainer.classList.remove('-gone')\r\n    })\r\n}\r\n\r\nexport {\r\n    sidebarListeners,\r\n    navbarListeners\r\n}","function updateErrorContainer(formCompType, inputId, errors) {\r\n    // remove previous errors if present\r\n    removeErrorContainer(formCompType, inputId)\r\n\r\n    const errorContainerClassId = `${formCompType}__error-container`\r\n    const inputField = document.getElementById(inputId)\r\n    const inputContainer = inputField.parentElement\r\n\r\n    if (errors) {\r\n        const errorContainer = document.createElement('div')\r\n        errorContainer.classList.add(errorContainerClassId)\r\n\r\n        for (const error of errors) {\r\n            const errorDiv = document.createElement('div')\r\n            errorDiv.classList.add(`${formCompType}__error`)\r\n            errorDiv.textContent = error.msg\r\n            errorContainer.append(errorDiv)\r\n        }\r\n\r\n        inputContainer.append(errorContainer)\r\n    }\r\n}\r\n\r\nfunction removeErrorContainer(formCompType, inputId) {\r\n    const errorContainerClassId = `${formCompType}__error-container`\r\n    const inputField = document.getElementById(inputId)\r\n    const inputContainer = inputField.parentElement\r\n    const errorContainer = inputContainer.querySelector(\r\n        '.' + errorContainerClassId\r\n    )\r\n\r\n    if (errorContainer) {\r\n        inputContainer.removeChild(errorContainer)\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    updateErrorContainer,\r\n    removeErrorContainer\r\n}","async function formFetch(\r\n    href, method, form, onResponseJson=null\r\n) {\r\n    const res = await fetch(\r\n        href, \r\n        {\r\n            method,\r\n            body: new FormData(form)\r\n        }\r\n    )\r\n    \r\n    // Input error statuses should be handled here\r\n    // Only input error status currently is 400\r\n    if (!res.ok && res.status !== 400) {\r\n        throw new Error(`HTTP error - Status 500`)\r\n    }\r\n\r\n    if (res.redirected) {\r\n        if (window.location.href === res.url) {\r\n            window.location.reload()\r\n        }\r\n        else {\r\n            window.location.href = res.url\r\n        }\r\n    }\r\n\r\n    const contentType = res.headers.get('content-type');\r\n\r\n    if (\r\n        !contentType \r\n        || !contentType.includes('application/json')\r\n        || !onResponseJson\r\n    ) {\r\n        return\r\n    }\r\n\r\n    const data = await res.json()\r\n    onResponseJson(data)\r\n}\r\n\r\nexport {\r\n    formFetch\r\n}","import { formFetch } from '../utils/fetch.js'\r\nimport { updateErrorContainer } from '../utils/formError.js'\r\nimport { PromiseQueue } from '../utils/queue.js'\r\n\r\n// used to queue reactions\r\nconst reactionQueue = PromiseQueue()\r\n\r\nfunction blogPostReactionFormListeners() {\r\n    const reaction = backendData.blogPost.reaction\r\n    let reactionId = reaction ? reaction._id : null\r\n    const reactionType = reaction ? reaction.reaction_type : null\r\n    \r\n    const likeButtons = document.querySelectorAll(\r\n        '.blog-post__like-button'\r\n    )\r\n    let liked = false\r\n\r\n    if (reactionType === 'Like') {\r\n        liked = true\r\n\r\n        for (const button of likeButtons) {\r\n            button.classList.add('-colorful')\r\n        }\r\n    }\r\n\r\n    const dislikeButtons = document.querySelectorAll(\r\n        '.blog-post__dislike-button'\r\n    )\r\n    let disliked = false\r\n\r\n    if (reactionType === 'Dislike') {\r\n        disliked = true\r\n\r\n        for (const button of dislikeButtons) {\r\n            button.classList.add('-colorful')\r\n        }\r\n    }\r\n\r\n    let responsiveLike = liked\r\n    let responsiveDislike = disliked\r\n    const likeReactionForms = document.querySelectorAll(\r\n        '.blog-post__like-reaction-form'\r\n    )\r\n    \r\n    for (const form of likeReactionForms) {\r\n        form.addEventListener('submit', async (event) => {\r\n            event.preventDefault()\r\n\r\n            updateReactionButtons(\r\n                responsiveDislike, \r\n                responsiveLike, \r\n                likeButtons, \r\n                dislikeButtons\r\n            )\r\n            responsiveDislike = false\r\n            responsiveLike = !responsiveLike\r\n\r\n            reactionQueue.enqueue(async () => {\r\n                await fetchReaction(\r\n                    form, \r\n                    disliked, \r\n                    liked, \r\n                    reactionId,\r\n                    (data) => {\r\n                        reactionId = data.reactionId\r\n                    }\r\n                )\r\n                disliked = false\r\n                liked = !liked\r\n            })\r\n            \r\n\r\n            \r\n        })\r\n    }\r\n    const dislikeReactionForms = document.querySelectorAll(\r\n        '.blog-post__dislike-reaction-form'\r\n    )\r\n    \r\n    for (const form of dislikeReactionForms) {\r\n        form.addEventListener('submit', async (event) => {\r\n            event.preventDefault()\r\n\r\n            updateReactionButtons(\r\n                responsiveLike, \r\n                responsiveDislike, \r\n                dislikeButtons, \r\n                likeButtons\r\n            )\r\n            responsiveLike = false\r\n            responsiveDislike = !responsiveDislike\r\n\r\n            reactionQueue.enqueue(async () => {\r\n                await fetchReaction(\r\n                    form, \r\n                    liked, \r\n                    disliked, \r\n                    reactionId,\r\n                    (data) => {\r\n                        reactionId = data.reactionId\r\n                    }\r\n                )\r\n                liked = false\r\n                disliked = !disliked\r\n            })                \r\n        })\r\n    }\r\n}\r\n\r\nfunction allCommentsReactionFormListeners() {\r\n    const commentCards = document.querySelectorAll(\r\n        '.comment-card'\r\n    )\r\n    // note that blogPost comments are non-replies only\r\n    // replies are available from the comment replied to\r\n    const comments = backendData.blogPost.comments\r\n\r\n    for (let i=0, j=0, k=0; i<commentCards.length; i++) {\r\n        const commentCard = commentCards[i]\r\n        let commentData = comments[j]\r\n        const replies = commentData.replies\r\n\r\n        if (!replies.length) {\r\n            j++\r\n        }\r\n        else if (k > 0) {\r\n            commentData = replies[k-1]\r\n            k++\r\n            \r\n            if (k === replies.length + 1) {\r\n                k = 0\r\n                j++\r\n            }\r\n        }\r\n        else {\r\n            k++\r\n        }\r\n\r\n        commentReactionFormListeners(commentCard, commentData)\r\n    }\r\n}\r\n\r\nfunction commentReactionFormListeners(commentCard, commentData) {\r\n    if (commentData.replies && commentData.replies.length) {\r\n        const viewRepliesButton = commentCard.querySelector(\r\n            '.comment-card__view-replies-button'\r\n        )\r\n        viewRepliesButton.addEventListener('click', () => {\r\n            const sibling = commentCard.nextSibling\r\n            let replyContainer = sibling\r\n\r\n            if (sibling.classList.contains(\r\n                'blog-post-page__reply-create-form'\r\n            )) {\r\n                replyContainer = sibling.nextSibling\r\n            }\r\n\r\n            if (replyContainer.classList.contains('-gone')) {\r\n                replyContainer.classList.remove('-gone')\r\n            }\r\n            else {\r\n                replyContainer.classList.add('-gone')\r\n            }\r\n        })\r\n    }\r\n\r\n    const replyButton = commentCard.querySelector(\r\n        '.comment-card__reply-button'\r\n    )\r\n\r\n    if (replyButton) {\r\n        replyButton.addEventListener('click', () => {\r\n            // Remove reply-create-form, if it exists\r\n            // The reply-create-form is created when clicking \r\n            // any comment reply button\r\n            const replyCreateForm = document.querySelector(\r\n                '.blog-post-page__reply-create-form'\r\n            )\r\n\r\n            if (replyCreateForm) {\r\n                if (replyCreateForm.previousSibling !== commentCard) {\r\n                    createCommentCreateForm(commentCard, commentData)\r\n                }\r\n\r\n                replyCreateForm.parentElement.removeChild(replyCreateForm)\r\n            }\r\n            else {\r\n                createCommentCreateForm(commentCard, commentData)\r\n            }\r\n        })\r\n    }\r\n\r\n    const likeButton = commentCard.querySelector(\r\n        '.comment-card__like-button'\r\n    )\r\n    const dislikeButton = commentCard.querySelector(\r\n        '.comment-card__dislike-button'\r\n    )\r\n\r\n    const reaction = commentData.reaction\r\n    let reactionId = reaction ? reaction._id : null\r\n    const reactionType = reaction ? reaction.reaction_type : null\r\n    let liked = false\r\n    let disliked = false\r\n\r\n    if (reactionType === 'Like') {\r\n        liked = true\r\n        likeButton.classList.add('-colorful')\r\n    }\r\n    else if (reactionType === 'Dislike') {\r\n        disliked = true\r\n        dislikeButton.classList.add('-colorful')\r\n    }\r\n\r\n    let responsiveLike = liked\r\n    let responsiveDislike = disliked\r\n    const likeReactionForm = commentCard.querySelector(\r\n        '.comment-card__like-reaction-form'\r\n    )\r\n    likeReactionForm.addEventListener('submit', async (event) => {\r\n        event.preventDefault()\r\n\r\n        updateReactionButtons(\r\n            responsiveDislike, \r\n            responsiveLike, \r\n            [likeButton], \r\n            [dislikeButton]\r\n        )\r\n        responsiveDislike = false\r\n        responsiveLike = !responsiveLike\r\n        \r\n        reactionQueue.enqueue(async () => {\r\n            await fetchReaction(\r\n                likeReactionForm, \r\n                disliked, \r\n                liked, \r\n                reactionId,\r\n                (data) => {\r\n                    reactionId = data.reactionId\r\n                }\r\n            )\r\n            disliked = false\r\n            liked = !liked\r\n        })\r\n\r\n            \r\n    })\r\n\r\n    const dislikeReactionForm = commentCard.querySelector(\r\n        '.comment-card__dislike-reaction-form'\r\n    )\r\n    dislikeReactionForm.addEventListener('submit', async (event) => {\r\n        event.preventDefault()\r\n\r\n        updateReactionButtons(\r\n            responsiveLike, \r\n            responsiveDislike, \r\n            [dislikeButton], \r\n            [likeButton]\r\n        )\r\n        responsiveLike = false\r\n        responsiveDislike = !responsiveDislike\r\n\r\n        reactionQueue.enqueue(async () => {\r\n            await fetchReaction(\r\n                dislikeReactionForm, \r\n                liked, \r\n                disliked, \r\n                reactionId,\r\n                (data) => {\r\n                    reactionId = data.reactionId\r\n                }\r\n            )\r\n            liked = false\r\n            disliked = !disliked\r\n        })\r\n    })\r\n}\r\n\r\nfunction updateReactionButtons(\r\n    toggleReaction, removeReaction, primaryButtons, secondaryButtons\r\n) {\r\n    if (removeReaction) {\r\n        for (const button of primaryButtons) {\r\n            button.classList.remove('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) - 1\r\n        }\r\n    }\r\n    else if (toggleReaction) {\r\n        for (const button of primaryButtons) {\r\n            button.classList.add('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) + 1\r\n        }\r\n\r\n        for (const button of secondaryButtons) {\r\n            button.classList.remove('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) - 1\r\n        }\r\n    }\r\n    else {\r\n        for (const button of primaryButtons) {\r\n            button.classList.add('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) + 1\r\n        }\r\n    }\r\n}\r\n\r\n// Whenever (toggleReaction && removeReaction) = false, reactionId = null\r\nasync function fetchReaction(\r\n    form, toggleReaction, removeReaction, reactionId, onResponseJson\r\n) {\r\n    const reactionsPath = `/users/${backendData.loginUser.username}/reactions`\r\n\r\n    if (removeReaction) {\r\n        await formFetch(\r\n            `${reactionsPath}/${reactionId}`,\r\n            'delete',\r\n            form,\r\n            onResponseJson\r\n        )\r\n    }\r\n    else if (toggleReaction) {\r\n        await formFetch(\r\n            `${reactionsPath}/${reactionId}`,\r\n            'put',\r\n            form,\r\n            onResponseJson\r\n        )\r\n    }\r\n    else {\r\n        await formFetch(\r\n            reactionsPath,\r\n            'post',\r\n            form,\r\n            onResponseJson\r\n        )\r\n    }  \r\n}\r\n\r\nfunction createCommentCreateForm(replyToCard, replyToData) {\r\n    const form = document.querySelector(\r\n        '.blog-post-page__comment-create-form'\r\n    )\r\n    const formClone = form.cloneNode(true)\r\n    \r\n    const hidden = document.createElement('input')\r\n    hidden.name = 'reply-to'\r\n    hidden.type = 'hidden'\r\n    hidden.value = replyToData._id\r\n    \r\n    formClone.append(hidden)\r\n    formClone.classList.remove(\r\n        'blog-post-page__comment-create-form'\r\n    )\r\n    formClone.classList.add(\r\n        'blog-post-page__reply-create-form'\r\n    )\r\n    commentCreateFormListeners(formClone)\r\n\r\n    const commentString = replyToCard.parentElement\r\n\r\n    commentString.insertBefore(\r\n        formClone, replyToCard.nextSibling\r\n    )\r\n}\r\n\r\nfunction defaultCommentCreateFormListeners() {\r\n    const form = document.querySelector(\r\n        '.blog-post-page__comment-create-form'\r\n    )\r\n    commentCreateFormListeners(form)\r\n}\r\n\r\nfunction commentCreateFormListeners(commentCreateForm) {\r\n    commentCreateForm.addEventListener('submit', (event) => {\r\n        event.preventDefault()\r\n\r\n        formFetch(\r\n            `/blog-posts/${backendData.blogPost._id}/comments`,\r\n            'post',\r\n            commentCreateForm,\r\n            (data) => {\r\n                updateErrorContainer('form-textarea', 'content', data.errors)\r\n\r\n                if (data.errors) {\r\n                    return\r\n                }\r\n                \r\n                if (commentCreateForm.classList.contains(\r\n                    'blog-post-page__reply-create-form'\r\n                )) {\r\n                    let replyContainer = commentCreateForm.nextSibling\r\n\r\n                    if (!replyContainer) {\r\n                        replyContainer = document.createElement('div')\r\n                        replyContainer.classList.add(\r\n                            'blog-post-page__reply-container'\r\n                        )\r\n                        commentCreateForm.parentElement.append(replyContainer)\r\n                    }\r\n\r\n                    const replyCards = replyContainer.querySelectorAll(\r\n                        '.comment-card'\r\n                    )\r\n                    replyContainer.innerHTML = data.renderedHTML\r\n                    const newCommentCard = replyContainer.querySelector(\r\n                        '.comment-card'\r\n                    )\r\n                    commentReactionFormListeners(\r\n                        newCommentCard, \r\n                        data.commentData\r\n                    )\r\n                    \r\n                    for (const replyCard of replyCards) {\r\n                        replyContainer.append(replyCard)\r\n                    }\r\n\r\n                    if (replyContainer.classList.contains('-gone')) {\r\n                        replyContainer.classList.remove('-gone')\r\n                    }\r\n\r\n                    commentCreateForm.parentElement.removeChild(commentCreateForm)\r\n                }\r\n                else {\r\n                    const commentString = document.createElement('div')\r\n                    commentString.classList.add('blog-post-page__comment-string')\r\n                    commentString.innerHTML = data.renderedHTML\r\n                    const newCommentCard = commentString.querySelector(\r\n                        '.comment-card'\r\n                    )\r\n                    commentReactionFormListeners(\r\n                        newCommentCard, \r\n                        data.commentData\r\n                    )\r\n                    commentCreateForm.parentElement.insertBefore(\r\n                        commentString, commentCreateForm.nextSibling\r\n                    )\r\n                }\r\n                \r\n            }\r\n        )\r\n    })\r\n}\r\n\r\nfunction blogPostSetup() {\r\n    const blogPostPage = document.querySelector(\r\n        '.blog-post-page'\r\n    )\r\n\r\n    if (!blogPostPage) {\r\n        return\r\n    }\r\n\r\n    blogPostReactionFormListeners()\r\n    defaultCommentCreateFormListeners()\r\n    allCommentsReactionFormListeners()\r\n}\r\n\r\n\r\nexport {\r\n    blogPostSetup\r\n}","function Queue() {\r\n    let front = null\r\n    let end = null\r\n\r\n    function Node(value, next=null) {\r\n        return { value, next }\r\n    }\r\n\r\n    function enqueue(value) {\r\n        const node = Node(value)\r\n\r\n        if (!front) {\r\n            front = node\r\n            end = node\r\n        }\r\n        else {\r\n            end.next = node\r\n            end = node\r\n        }\r\n    }\r\n\r\n    function dequeue() {\r\n        if (!front) {\r\n            return undefined\r\n        }\r\n        \r\n        const removedNode = front\r\n        front = front.next\r\n        \r\n        if (!front) {\r\n            end = null\r\n        }\r\n\r\n        return removedNode.value\r\n    }\r\n\r\n    function isEmpty() {\r\n        return front === null\r\n    }\r\n\r\n    return {enqueue, dequeue, isEmpty}\r\n}\r\n\r\nfunction PromiseQueue() {\r\n    const queue = Queue()\r\n    let isProcessing = false\r\n\r\n    async function enqueue(value) {\r\n        queue.enqueue(value)\r\n\r\n        if (isProcessing) {\r\n            return\r\n        }\r\n\r\n        isProcessing = true\r\n\r\n        while (!queue.isEmpty()) {\r\n            const operation = queue.dequeue()\r\n            await operation()\r\n        }\r\n\r\n        isProcessing = false\r\n    }\r\n\r\n    return {enqueue}\r\n}\r\n\r\n\r\nexport {\r\n    PromiseQueue\r\n}","function userBlogPostsSearchbarListeners() {\r\n    const searchbar = document.querySelector(\r\n        '.user-blog-posts-page__searchbar .searchbar__input'\r\n    )\r\n\r\n    searchbar.addEventListener('input', (event) => {\r\n        const blogPostItems = document.querySelectorAll('.blog-post-item')\r\n        const searchValue = event\r\n            .currentTarget\r\n            .value\r\n            .trim()\r\n            .toLowerCase()\r\n\r\n        if (searchValue === '') {\r\n            for (const item of blogPostItems) {\r\n                item.classList.remove('-gone')\r\n            }\r\n        }\r\n        else {\r\n            for (const item of blogPostItems) {\r\n                const title = item.querySelector('.blog-post-item__title')\r\n                    .textContent\r\n                    .toLowerCase()\r\n                const regex = new RegExp(searchValue)\r\n                \r\n                if (regex.test(title))\r\n                    item.classList.remove('-gone')\r\n                else {\r\n                    item.classList.add('-gone')\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction userBlogPostsSortSelectorListeners() {\r\n    const sortSelector = document.querySelector(\r\n        '.user-blog-posts-page__sort-selector'\r\n    )\r\n    const publishedList = document.querySelector(\r\n        '.user-blog-posts__published.blog-post-list'\r\n    )\r\n    const unpublishedList = document.querySelector(\r\n        '.user-blog-posts__unpublished.blog-post-list'\r\n    )\r\n\r\n    sortSelector.addEventListener('change', (event) => {\r\n        const sortValue = event\r\n            .target\r\n            .value\r\n            .trim()\r\n            .toLowerCase()\r\n        \r\n        sortBlogPostList(\r\n            sortValue, \r\n            publishedList,\r\n            true\r\n        )\r\n        sortBlogPostList(\r\n            sortValue, \r\n            unpublishedList\r\n        )\r\n        \r\n    })\r\n}\r\n\r\nfunction sortBlogPostList(sortBy, blogPostList, published=false) {\r\n    const blogPostItems = Array.from(\r\n        blogPostList.querySelectorAll('.blog-post-item')\r\n    )\r\n\r\n    if (sortBy === 'title') {\r\n        blogPostItems.sort((a, b) => {\r\n            const titleA = a.querySelector(\r\n                '.blog-post-item__title'\r\n            ).textContent\r\n            const titleB = b.querySelector(\r\n                '.blog-post-item__title'\r\n            ).textContent\r\n\r\n            return titleB.localeCompare(titleA)\r\n        })\r\n    }\r\n    else if (sortBy === 'last-mod-date') {\r\n        blogPostItems.sort((a, b) => {\r\n            const dateA = a.querySelector(\r\n                '.blog-post-item__last-modified'\r\n            ).textContent\r\n            const dateB = b.querySelector(\r\n                '.blog-post-item__last-modified'\r\n            ).textContent\r\n\r\n            return compareDateStrings(dateB, dateA)\r\n        })\r\n    }\r\n    else if (published) {\r\n        switch (sortBy) {\r\n            case 'publish-date':\r\n                blogPostItems.sort((a, b) => {\r\n                    const dateA = a.querySelector(\r\n                        '.blog-post-item__published'\r\n                    ).textContent\r\n                    const dateB = b.querySelector(\r\n                        '.blog-post-item__published'\r\n                    ).textContent\r\n\r\n                    return compareDateStrings(dateB, dateA)\r\n                })\r\n                break \r\n            case 'likes':\r\n                blogPostItems.sort((a, b) => {\r\n                    const likesA = a.querySelector(\r\n                        '.blog-post-item__likes .icon-element__label'\r\n                    ).textContent\r\n                    const likesB = b.querySelector(\r\n                        '.blog-post-item__likes .icon-element__label'\r\n                    ).textContent\r\n\r\n                    return parseInt(likesB) - parseInt(likesA)\r\n                })\r\n                break\r\n            case 'dislikes':\r\n                blogPostItems.sort((a, b) => {\r\n                    const dislikesA = a.querySelector(\r\n                        '.blog-post-item__dislikes .icon-element__label'\r\n                    ).textContent\r\n                    const dislikesB = b.querySelector(\r\n                        '.blog-post-item__dislikes .icon-element__label'\r\n                    ).textContent\r\n\r\n                    return parseInt(dislikesB) - parseInt(dislikesA)\r\n                })\r\n                break\r\n            case 'total-comments':\r\n                blogPostItems.sort((a, b) => {\r\n                    const commentsA = a.querySelector(\r\n                        '.blog-post-item__total-comments .icon-element__label'\r\n                    ).textContent\r\n                    const commentsB = b.querySelector(\r\n                        '.blog-post-item__total-comments .icon-element__label'\r\n                    ).textContent\r\n\r\n                    return parseInt(commentsB) - parseInt(commentsA)\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    blogPostList.innerHTML = ''\r\n    blogPostList.append(...blogPostItems)\r\n}\r\n\r\nfunction compareDateStrings(a, b) {\r\n    const dateA = a\r\n        .split('-')\r\n        .map((str) => parseInt(str))\r\n    const dateB = b\r\n        .split('-')\r\n        .map((str) => parseInt(str))\r\n\r\n    let result = 0\r\n\r\n    for (let i=0; i<dateA.length; i++) {\r\n        if (dateA[i] < dateB[i]) {\r\n            result = -1\r\n            break\r\n        }\r\n        else if (dateA[i] > dateB[i]) {\r\n            result = 1\r\n            break\r\n        }\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nfunction userBlogPostsTabListeners() {\r\n    const published = document.querySelector(\r\n        '.user-blog-posts__published'\r\n    )\r\n    const unpublished = document.querySelector(\r\n        '.user-blog-posts__unpublished'\r\n    )\r\n    \r\n    const publishedTab = document.querySelector(\r\n        '.user-blog-posts__published-tab'\r\n    )\r\n\r\n    publishedTab.addEventListener('click', () => {\r\n        if (published.classList.contains('-gone')) {\r\n            unpublished.classList.add('-gone')\r\n            published.classList.remove('-gone')\r\n        }\r\n    })\r\n\r\n    const unpublishedTab = document.querySelector(\r\n        '.user-blog-posts__unpublished-tab'\r\n    )\r\n\r\n    unpublishedTab.addEventListener('click', () => {\r\n        if (unpublished.classList.contains('-gone')) {\r\n            published.classList.add('-gone')\r\n            unpublished.classList.remove('-gone')\r\n        }\r\n    }) \r\n}\r\n\r\nfunction userBlogPostsListListeners(blogPostList) {\r\n    const items = blogPostList.querySelectorAll(\r\n        '.blog-post-item'\r\n    )\r\n    const rightPanel = document.querySelector(\r\n        '.user-blog-posts__right'\r\n    )\r\n\r\n    for (const item of items) {\r\n\r\n        item.addEventListener('click', (event) => {\r\n            onItemClick(event, rightPanel)\r\n        })\r\n\r\n        const deleteButton = item.querySelector(\r\n            '.blog-post-item__delete-button'\r\n        )\r\n        deleteButton.addEventListener('click', (event) => {\r\n            event.stopPropagation()\r\n            onDeleteButtonClick(item, blogPostList)\r\n        })\r\n    }\r\n}\r\n\r\nfunction onItemClick(event, rightPanel) {\r\n    const itemId = event.currentTarget.id\r\n    const blogPosts = [\r\n        ...backendData.publishedBlogPosts,\r\n        ...backendData.unpublishedBlogPosts\r\n    ]\r\n    const blogPost = blogPosts.find(\r\n        (blogPost) => blogPost._id.toString() === itemId\r\n    )\r\n\r\n    const fragmentTitle = document.querySelector(\r\n        '.blog-post-fragment__title'\r\n    )\r\n    fragmentTitle.innerHTML = blogPost.title\r\n\r\n    const fragmentThumbnail = document.querySelector(\r\n        '.blog-post-fragment__thumbnail'\r\n    )\r\n    fragmentThumbnail.innerHTML = ''\r\n\r\n    if (blogPost.thumbnail) {\r\n        const pic = blogPost.thumbnail\r\n        const dataUri = `data:${pic.contentType};base64,${pic.data}`\r\n        const img = document.createElement('img')\r\n        img.src = dataUri\r\n        \r\n        fragmentThumbnail.classList.remove('-empty')\r\n        fragmentThumbnail.append(img)\r\n    }\r\n    else {\r\n        fragmentThumbnail.classList.add('-empty')\r\n        fragmentThumbnail.textContent = 'Your thumbnail appears here'\r\n    }\r\n\r\n    const fragmentContent = document.querySelector(\r\n        '.blog-post-fragment__content'\r\n    )\r\n    fragmentContent.innerHTML = blogPost.content\r\n\r\n    rightPanel.classList.remove('-hidden')\r\n}\r\n\r\nfunction onDeleteButtonClick(item, blogPostList) {\r\n    fetch(window.location.href + '/' + item.id, { method: 'DELETE' })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error(`HTTP error - Status: ${res.status}`)\r\n            }\r\n            \r\n            // remove deleted blog post from view\r\n            blogPostList.removeChild(item)\r\n            \r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })   \r\n}\r\n\r\nfunction userBlogPostsSetup() {\r\n    const userBlogPostsPage = document.querySelector(\r\n        '.user-blog-posts-page'\r\n    )\r\n\r\n    if (!userBlogPostsPage) {\r\n        return\r\n    }\r\n\r\n    userBlogPostsSearchbarListeners()\r\n    userBlogPostsSortSelectorListeners()\r\n    userBlogPostsTabListeners()\r\n\r\n    const publishedList = document.querySelector(\r\n        '.user-blog-posts__published'\r\n    )\r\n    const unpublishedList = document.querySelector(\r\n        '.user-blog-posts__unpublished'\r\n    )\r\n    userBlogPostsListListeners(publishedList)\r\n    userBlogPostsListListeners(unpublishedList)\r\n}\r\n\r\nexport {\r\n    userBlogPostsSetup\r\n}","import { navbarListeners, sidebarListeners } from './layouts/toolbars.js'\r\nimport { loggingFormSetup } from './pages/loggingForm.js'\r\nimport { blogPostSetup } from './pages/blogPost.js'\r\nimport { blogPostFormSetup } from './pages/blogPostForm.js'\r\nimport { profileFormSetup } from './pages/userProfile.js'\r\nimport { userBlogPostsSetup } from './pages/userBlogPosts.js'\r\n\r\n// layout setup\r\nnavbarListeners()\r\nsidebarListeners(\r\n    '.account-sidebar', \r\n    '.navbar__account-button'\r\n)\r\nsidebarListeners(\r\n    '.content-sidebar', \r\n    '.navbar__content-button'\r\n)\r\n\r\n// page setup\r\nloggingFormSetup()\r\nblogPostSetup()\r\nblogPostFormSetup()\r\nprofileFormSetup()\r\nuserBlogPostsSetup()\r\n","import { updateErrorContainer } from '../utils/formError.js'\r\n\r\nfunction loggingFormSetup() {\r\n    const loggingPage = document.querySelector(\r\n        '.logging-page'\r\n    )\r\n\r\n    if (!loggingPage) {\r\n        return\r\n    }\r\n\r\n    const errors = backendData.errors\r\n    const inputData = {\r\n        'username': {\r\n            errors: [],\r\n            formCompType: 'form-input'\r\n        },\r\n        'password': {\r\n            errors: [],\r\n            formCompType: 'form-input'\r\n        },\r\n    }\r\n    const loggingForm = loggingPage.querySelector(\r\n        '.logging-form'\r\n    )\r\n    const pathSegments = loggingForm.action.split('/')\r\n    const suffix = pathSegments[pathSegments.length - 1]\r\n\r\n    if (suffix === 'login') {\r\n        // Flash errors are just strings\r\n        // Compatibility demands object with 'msg' prop\r\n        inputData.password.errors = errors.map(error => { \r\n            return {msg: error} \r\n        })\r\n    }\r\n    else {\r\n        for (const error of errors) {\r\n            inputData[error.path].errors.push(error)\r\n        }\r\n    }\r\n\r\n    for (const [k, v] of Object.entries(inputData)) {\r\n        updateErrorContainer(v.formCompType, k, v.errors)\r\n    }\r\n}\r\n\r\nexport {\r\n    loggingFormSetup\r\n}\r\n\r\n","import { formFetch } from '../utils/fetch.js'\r\nimport { initializeTinyMCE } from '../utils/tinyMCEConfig.js'\r\nimport { updateErrorContainer, removeErrorContainer } from '../utils/formError.js'\r\n\r\nfunction blogPostFormTabListeners() {\r\n    const metadata = document.querySelector(\r\n        '.blog-post-form__metadata'\r\n    )\r\n    const content = document.querySelector(\r\n        '.blog-post-form__content'\r\n    )\r\n\r\n    const metadataTab = document.querySelector(\r\n        '.blog-post-form-page__metadata-tab'\r\n    )\r\n\r\n    metadataTab.addEventListener('click', () => {\r\n        if (metadata.classList.contains('-gone')) {\r\n            content.classList.add('-gone')\r\n            metadata.classList.remove('-gone')\r\n        }\r\n    })\r\n\r\n    const contentTab = document.querySelector(\r\n        '.blog-post-form-page__content-tab'\r\n    )\r\n\r\n    contentTab.addEventListener('click', () => {\r\n        if (content.classList.contains('-gone')) {\r\n            metadata.classList.add('-gone')\r\n            content.classList.remove('-gone')\r\n        }\r\n    })\r\n}\r\n\r\nfunction blogPostFormMetadataListeners() {\r\n    const titlePreview = document.querySelector(\r\n        '.blog-post-fragment__title'\r\n    )\r\n    const titleInput = document.getElementById('title')\r\n    titlePreview.textContent = titleInput.value\r\n\r\n    titleInput.addEventListener('change', () => {\r\n        titlePreview.textContent = titleInput.value\r\n    })\r\n}\r\n\r\nfunction blogPostFormSubmitListeners() {\r\n    const blogPostForm = document.querySelector(\r\n        '.blog-post-form'\r\n    )\r\n\r\n    const discardButton = document.querySelector(\r\n        '.navbar__discard-button'\r\n    )\r\n    discardButton.addEventListener('click', () => {\r\n        addPreMethod('discard')\r\n    })\r\n\r\n    const saveButton = document.querySelector(\r\n        '.navbar__save-button'\r\n    )\r\n    saveButton.addEventListener('click', () => {\r\n        addPreMethod('save')\r\n    })\r\n\r\n    const publishButton = document.querySelector(\r\n        '.navbar__publish-button'\r\n    )\r\n    publishButton.addEventListener('click', () => {\r\n        addPreMethod('publish')\r\n    })\r\n\r\n    function addPreMethod(preMethod) {\r\n        const preMethodInputs = blogPostForm.querySelectorAll(\r\n            '.blog-post-form__pre-method'\r\n        )\r\n\r\n        for (const preMethod of preMethodInputs) {\r\n            blogPostForm.removeChild(preMethod)\r\n        }\r\n\r\n        const input = document.createElement('input')\r\n        input.classList.add('blog-post-form__pre-method')\r\n        input.name = 'pre-method'\r\n        input.type = 'hidden'\r\n        input.value = preMethod\r\n        blogPostForm.append(input)\r\n    }\r\n\r\n    // in this case, enter key submission is harmful - prevent it\r\n    blogPostForm.addEventListener('keypress', (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault()\r\n        }\r\n    })\r\n    \r\n    blogPostForm.addEventListener('submit', async (event) => {\r\n        event.preventDefault()\r\n        \r\n        let method = 'PUT'\r\n        let href = window.location.href\r\n\r\n        // blogPost param is empty object if posting, else putting\r\n        if (!Object.keys(backendData.blogPost).length) {\r\n            method = 'POST'\r\n            const hrefWords = href.split('/')\r\n            hrefWords.pop() // remove the ending /new-blog-post\r\n            href = hrefWords.join('/')\r\n        }\r\n\r\n        let errorsOccurred = false\r\n        const inputData = {\r\n            'title': {\r\n                errors: [],\r\n                formCompType: 'form-input'\r\n            },\r\n            'thumbnail': {\r\n                errors: [],\r\n                formCompType: 'form-input'\r\n            },\r\n            'keywords': {\r\n                errors: [],\r\n                formCompType: 'form-textarea'\r\n            },\r\n            'content': {\r\n                errors: [],\r\n                formCompType: 'form-textarea'\r\n            },\r\n            'word-count': {\r\n                errors: [],\r\n                formCompType: null\r\n            }\r\n        }\r\n        \r\n        await formFetch(\r\n            href, \r\n            method, \r\n            blogPostForm,\r\n            (data) => {\r\n                errorsOccurred = true\r\n\r\n                for (const error of data.errors) {\r\n                    inputData[error.path].errors.push(error)\r\n                }\r\n\r\n                inputData.content.errors.push(\r\n                    ...inputData['word-count'].errors\r\n                )\r\n                delete inputData['word-count']\r\n\r\n                for (const [k, v] of Object.entries(inputData)) {\r\n                    updateErrorContainer(v.formCompType, k, v.errors)\r\n                }\r\n            }\r\n        )\r\n\r\n        if (!errorsOccurred) {\r\n            for (const [k, v] of Object.entries(inputData)) {\r\n                removeErrorContainer(v.formCompType, k)\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction blogPostFormSizing() {\r\n    const leftBody = document.querySelector(\r\n        '.blog-post-form-page__left .blog-post-form-page__body'\r\n    )\r\n    const rightBody = document.querySelector(\r\n        '.blog-post-form-page__right .blog-post-form-page__body'\r\n    )\r\n    rightBody.style.maxHeight = leftBody.offsetHeight + 'px'\r\n    rightBody.style.maxWidth = leftBody.offsetWidth + 'px'\r\n}\r\n\r\n// Function blogPostFormSizing must be called before function \r\n// blogPostFormMetadataEventListeners\r\nfunction blogPostFormSetup() {\r\n    const blogPostFormPage = document.querySelector(\r\n        '.blog-post-form-page'\r\n    )\r\n\r\n    if (!blogPostFormPage) {\r\n        return\r\n    }\r\n\r\n    // TinyMCE init must occur before the form submit listener is set \r\n    // This allows the editor's submit listener to trigger first\r\n    initializeTinyMCE('.tinymce-app')\r\n    blogPostFormSizing()\r\n    blogPostFormTabListeners()\r\n    blogPostFormMetadataListeners()\r\n    blogPostFormSubmitListeners()\r\n    \r\n}\r\n\r\nexport {\r\n    blogPostFormSetup\r\n}","function initializeTinyMCE(selector) {\r\n    const tinyMCEElement = document.querySelector(selector)\r\n\r\n    if (!tinyMCEElement) {\r\n        return\r\n    }\r\n\r\n    // Variable backendData is data provided by backend for rendering\r\n    // See root.pug for the script that defines it\r\n    let initialContent = backendData.blogPost.content || ''\r\n    \r\n    tinymce.init({\r\n        selector: selector,\r\n        plugins: 'lists link image table code help wordcount',\r\n        menubar: 'file edit view insert table tools help',\r\n        toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | numlist bullist',\r\n        promotion: false,\r\n        image_file_types: 'jpeg,jpg,png,webp,gif',\r\n        setup: (editor) => {\r\n            editor.on('init', () => {\r\n                editor.setContent(initialContent)\r\n                const preview = document.querySelector('.blog-post-fragment__content')\r\n                preview.innerHTML = editor.getContent()\r\n            })\r\n    \r\n            editor.on('change', () => {\r\n                editor.save()\r\n                const preview = document.querySelector('.blog-post-fragment__content')\r\n                preview.innerHTML = editor.getContent()\r\n            })\r\n\r\n            editor.on('submit', () => {\r\n                const wordCountInput = document.getElementById('word-count')\r\n                wordCountInput.value = editor.plugins.wordcount.getCount()\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    initializeTinyMCE\r\n}","import { formFetch } from '../utils/fetch.js'\r\nimport { updateErrorContainer } from '../utils/formError.js'\r\n\r\nfunction profileFormSetup() {\r\n    const profilePage = document.querySelector(\r\n        '.profile-page'\r\n    )\r\n\r\n    if (!profilePage) {\r\n        return\r\n    }\r\n\r\n    const profileEditButton = document.querySelector(\r\n        '.profile__edit-button'\r\n    )\r\n    const secondary = document.querySelector(\r\n        '.profile__secondary'\r\n    )\r\n    const profileForm = document.querySelector(\r\n        '.profile-form'\r\n    )\r\n\r\n    profileEditButton.addEventListener('click', () => {\r\n        if (profileForm.classList.contains('-gone')) {\r\n            secondary.classList.add('-gone')\r\n            profileForm.classList.remove('-gone')\r\n        }\r\n    })\r\n\r\n    const profileFormCancelButton = document.querySelector(\r\n        '.profile-form__cancel'\r\n    )\r\n\r\n    profileFormCancelButton.addEventListener('click', () => {\r\n        if (secondary.classList.contains('-gone')) {\r\n            profileForm.classList.add('-gone')\r\n            secondary.classList.remove('-gone')\r\n\r\n            const { username, bio, keywords } = backendData.user \r\n\r\n            const usernameInput = document.getElementById('username')\r\n            usernameInput.value = username\r\n\r\n            if (bio) {\r\n                const bioInput = document.getElementById('bio')\r\n                bioInput.value = bio\r\n            }\r\n\r\n            if (keywords.length) {\r\n                const keywordsInput = document.getElementById('keywords')\r\n                keywordsInput.value = keywords.join(' ')\r\n            } \r\n        }\r\n    })\r\n\r\n    profileForm.addEventListener('submit', (event) => {\r\n        event.preventDefault()\r\n\r\n        formFetch(\r\n            `/users/${backendData.user.username}`, \r\n            'PUT', \r\n            profileForm,\r\n            (data) => {\r\n                const inputData = {\r\n                    'profile-pic': {\r\n                        errors: [],\r\n                        formCompType: 'form-input'\r\n                    },\r\n                    'username': {\r\n                        errors: [],\r\n                        formCompType: 'form-input'\r\n                    },\r\n                    'bio': {\r\n                        errors: [],\r\n                        formCompType: 'form-textarea'\r\n                    },\r\n                    'keywords': {\r\n                        errors: [],\r\n                        formCompType: 'form-textarea'\r\n                    }\r\n                }\r\n\r\n                for (const error of data.errors) {\r\n                    inputData[error.path].errors.push(error)\r\n                }\r\n\r\n                for (const [k, v] of Object.entries(inputData)) {\r\n                    updateErrorContainer(v.formCompType, k, v.errors)\r\n                }\r\n            }    \r\n        )\r\n    })\r\n}\r\n\r\nexport {\r\n    profileFormSetup\r\n}"],"names":["sidebarListeners","sidebarSelector","sidebarButtonSelector","sidebar","document","querySelector","addEventListener","classList","contains","remove","add","updateErrorContainer","formCompType","inputId","errors","removeErrorContainer","errorContainerClassId","inputContainer","getElementById","parentElement","errorContainer","createElement","error","errorDiv","textContent","msg","append","removeChild","async","formFetch","href","method","form","onResponseJson","res","fetch","body","FormData","ok","status","Error","redirected","window","location","url","reload","contentType","headers","get","includes","json","reactionQueue","queue","front","end","enqueue","value","node","next","Node","dequeue","removedNode","isEmpty","Queue","isProcessing","operation","PromiseQueue","commentReactionFormListeners","commentCard","commentData","replies","length","sibling","nextSibling","replyContainer","replyButton","replyCreateForm","previousSibling","createCommentCreateForm","likeButton","dislikeButton","reaction","reactionId","_id","reactionType","reaction_type","liked","disliked","responsiveLike","responsiveDislike","likeReactionForm","event","preventDefault","updateReactionButtons","fetchReaction","data","dislikeReactionForm","toggleReaction","removeReaction","primaryButtons","secondaryButtons","button","label","parseInt","reactionsPath","backendData","loginUser","username","replyToCard","replyToData","formClone","cloneNode","hidden","name","type","commentCreateFormListeners","insertBefore","commentCreateForm","blogPost","replyCards","querySelectorAll","innerHTML","renderedHTML","replyCard","commentString","sortBlogPostList","sortBy","blogPostList","published","blogPostItems","Array","from","sort","a","b","titleA","localeCompare","dateA","compareDateStrings","likesA","likesB","dislikesA","dislikesB","commentsA","commentsB","split","map","str","dateB","result","i","userBlogPostsListListeners","items","rightPanel","item","onItemClick","stopPropagation","onDeleteButtonClick","itemId","currentTarget","id","publishedBlogPosts","unpublishedBlogPosts","find","toString","title","fragmentThumbnail","thumbnail","pic","dataUri","img","src","content","then","catch","navbar","searchbarInput","navbarDropdownContainer","encodedWords","filter","word","encodeURIComponent","join","newFocus","relatedTarget","navbarListeners","loggingPage","inputData","pathSegments","action","password","path","push","k","v","Object","entries","loggingFormSetup","likeButtons","dislikeButtons","likeReactionForms","dislikeReactionForms","blogPostReactionFormListeners","commentCards","comments","j","allCommentsReactionFormListeners","selector","initialContent","tinymce","init","plugins","menubar","toolbar","promotion","image_file_types","setup","editor","on","setContent","getContent","save","wordcount","getCount","initializeTinyMCE","leftBody","rightBody","style","maxHeight","offsetHeight","maxWidth","offsetWidth","blogPostFormSizing","metadata","blogPostFormTabListeners","titlePreview","titleInput","blogPostFormMetadataListeners","blogPostForm","addPreMethod","preMethod","preMethodInputs","input","key","keys","hrefWords","pop","errorsOccurred","blogPostFormSubmitListeners","profileEditButton","secondary","profileForm","bio","keywords","user","profileFormSetup","searchValue","trim","toLowerCase","RegExp","test","sortSelector","publishedList","unpublishedList","sortValue","target","userBlogPostsSortSelectorListeners","unpublished","userBlogPostsTabListeners","userBlogPostsSetup"],"sourceRoot":""}