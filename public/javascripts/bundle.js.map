{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4DAA4D,WAAW;AACvE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;AClF6C;AACe;AACZ;AAChD;AACA;AACA,sBAAsB,6DAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnoCAAoC,+BAA+B;AACnE;AACA;AACA,cAAc,0DAAS;AACvB,eAAe,cAAc,GAAG,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAAS;AACvB,eAAe,cAAc,GAAG,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAS;AACjB,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA,gBAAgB,0EAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACld6C;AACgB;AACqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0EAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yEAAoB;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpM4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yEAAoB;AAC5B;AACA;AACA;AAGC;AACD;;;;;;;;;;;;;;;ACjiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB,SAAS,SAAS;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvT6C;AACe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,2DAAS;AACjB,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yEAAoB;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;;;;;;;UCtCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNyE;AAChB;AACN;AACQ;AACF;AACI;AAC7D;AACA;AACA,qEAAe;AACf,uEAAgB;AAChB;AACA;AACA;AACA,uEAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wEAAgB;AAChB,kEAAa;AACb,0EAAiB;AACjB,wEAAgB;AAChB,4EAAkB","sources":["webpack://techstack/./public/javascripts/layouts/toolbars.js","webpack://techstack/./public/javascripts/pages/blogPost.js","webpack://techstack/./public/javascripts/pages/blogPostForm.js","webpack://techstack/./public/javascripts/pages/loggingForm.js","webpack://techstack/./public/javascripts/pages/userBlogPosts.js","webpack://techstack/./public/javascripts/pages/userProfile.js","webpack://techstack/./public/javascripts/utils/fetch.js","webpack://techstack/./public/javascripts/utils/formError.js","webpack://techstack/./public/javascripts/utils/queue.js","webpack://techstack/./public/javascripts/utils/tinyMCEConfig.js","webpack://techstack/webpack/bootstrap","webpack://techstack/webpack/runtime/define property getters","webpack://techstack/webpack/runtime/hasOwnProperty shorthand","webpack://techstack/webpack/runtime/make namespace object","webpack://techstack/./public/javascripts/root.js"],"sourcesContent":["function sidebarListeners(sidebarSelector, sidebarButtonSelector) {\r\n    const sidebar = document.querySelector(sidebarSelector)\r\n\r\n    if (!sidebar) {\r\n        return\r\n    }\r\n\r\n    const sidebarButton = document.querySelector(sidebarButtonSelector)\r\n\r\n    sidebarButton.addEventListener('click', () => {\r\n        \r\n        if (sidebar.classList.contains('-open')) {\r\n            sidebar.classList.remove('-open')\r\n            sidebar.classList.add('-closed')\r\n        }\r\n        else if (sidebar.classList.contains('-closed')) {\r\n            sidebar.classList.remove('-closed')\r\n            sidebar.classList.add('-open')\r\n        }\r\n    })\r\n}\r\n\r\nfunction navbarListeners() {\r\n    const navbar = document.querySelector('.navbar')\r\n\r\n    if (!navbar) {\r\n        return\r\n    }\r\n\r\n    const searchbarInput = navbar.querySelector('.searchbar__input')\r\n\r\n    if (!searchbarInput) {\r\n        return\r\n    }\r\n\r\n    const navbarDropdownContainer = document.querySelector(\r\n        '.navbar-dropdown-container'\r\n    )\r\n    searchbarInput.addEventListener('input', () => {\r\n        const encodedWords = searchbarInput\r\n            .value\r\n            .split(' ')\r\n            .filter(word => word)\r\n            .map(word => encodeURIComponent(word))\r\n\r\n        if (!encodedWords.length) {\r\n            navbarDropdownContainer.innerHTML = ''\r\n            return\r\n        }\r\n        \r\n        const href = '/blog-posts?keywords=' + encodedWords.join(',')\r\n\r\n        fetch(\r\n            href, \r\n            { method: 'GET' }\r\n        )\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error(`HTTP error - Status: ${res.status}`)\r\n                }\r\n    \r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                navbarDropdownContainer.innerHTML = data.renderedHTML\r\n            })\r\n            .catch(error => {\r\n                throw error\r\n            })\r\n    })\r\n    searchbarInput.addEventListener('blur', (event) => {\r\n        const newFocus = event.relatedTarget\r\n        \r\n        // check to see if link has been clicked\r\n        if (!newFocus || !navbarDropdownContainer.contains(newFocus)) {\r\n            navbarDropdownContainer.classList.add('-gone')\r\n        }\r\n    })\r\n    searchbarInput.addEventListener('focus', () => {\r\n        navbarDropdownContainer.classList.remove('-gone')\r\n    })\r\n}\r\n\r\nexport {\r\n    sidebarListeners,\r\n    navbarListeners\r\n}","import { formFetch } from '../utils/fetch.js'\r\nimport { updateErrorContainer } from '../utils/formError.js'\r\nimport { PromiseQueue } from '../utils/queue.js'\r\n\r\n// used to queue reactions\r\nconst reactionQueue = PromiseQueue()\r\n\r\nfunction blogPostReactionFormListeners() {\r\n    const reaction = backendData.blogPost.reaction\r\n    let reactionId = reaction ? reaction._id : null\r\n    const reactionType = reaction ? reaction.reaction_type : null\r\n    \r\n    const likeButtons = document.querySelectorAll(\r\n        '.blog-post__like-button'\r\n    )\r\n    let liked = false\r\n\r\n    if (reactionType === 'Like') {\r\n        liked = true\r\n\r\n        for (const button of likeButtons) {\r\n            button.classList.add('-colorful')\r\n        }\r\n    }\r\n\r\n    const dislikeButtons = document.querySelectorAll(\r\n        '.blog-post__dislike-button'\r\n    )\r\n    let disliked = false\r\n\r\n    if (reactionType === 'Dislike') {\r\n        disliked = true\r\n\r\n        for (const button of dislikeButtons) {\r\n            button.classList.add('-colorful')\r\n        }\r\n    }\r\n\r\n    let responsiveLike = liked\r\n    let responsiveDislike = disliked\r\n    const likeReactionForms = document.querySelectorAll(\r\n        '.blog-post__like-reaction-form'\r\n    )\r\n    \r\n    for (const form of likeReactionForms) {\r\n        form.addEventListener('submit', async (event) => {\r\n            event.preventDefault()\r\n\r\n            updateReactionButtons(\r\n                responsiveDislike, \r\n                responsiveLike, \r\n                likeButtons, \r\n                dislikeButtons\r\n            )\r\n            responsiveDislike = false\r\n            responsiveLike = !responsiveLike\r\n\r\n            reactionQueue.enqueue(async () => {\r\n                await fetchReaction(\r\n                    form, \r\n                    disliked, \r\n                    liked, \r\n                    reactionId,\r\n                    (data) => {\r\n                        reactionId = data.reactionId\r\n                    }\r\n                )\r\n                disliked = false\r\n                liked = !liked\r\n            })\r\n            \r\n\r\n            \r\n        })\r\n    }\r\n    const dislikeReactionForms = document.querySelectorAll(\r\n        '.blog-post__dislike-reaction-form'\r\n    )\r\n    \r\n    for (const form of dislikeReactionForms) {\r\n        form.addEventListener('submit', async (event) => {\r\n            event.preventDefault()\r\n\r\n            updateReactionButtons(\r\n                responsiveLike, \r\n                responsiveDislike, \r\n                dislikeButtons, \r\n                likeButtons\r\n            )\r\n            responsiveLike = false\r\n            responsiveDislike = !responsiveDislike\r\n\r\n            reactionQueue.enqueue(async () => {\r\n                await fetchReaction(\r\n                    form, \r\n                    liked, \r\n                    disliked, \r\n                    reactionId,\r\n                    (data) => {\r\n                        reactionId = data.reactionId\r\n                    }\r\n                )\r\n                liked = false\r\n                disliked = !disliked\r\n            })                \r\n        })\r\n    }\r\n}\r\n\r\nfunction allCommentsReactionFormListeners() {\r\n    const commentCards = document.querySelectorAll(\r\n        '.comment-card'\r\n    )\r\n    // note that blogPost comments are non-replies only\r\n    // replies are available from the comment replied to\r\n    const comments = backendData.blogPost.comments\r\n\r\n    for (let i=0, j=0, k=0; i<commentCards.length; i++) {\r\n        const commentCard = commentCards[i]\r\n        let commentData = comments[j]\r\n        const replies = commentData.replies\r\n\r\n        if (!replies.length) {\r\n            j++\r\n        }\r\n        else if (k > 0) {\r\n            commentData = replies[k-1]\r\n            k++\r\n            \r\n            if (k === replies.length + 1) {\r\n                k = 0\r\n                j++\r\n            }\r\n        }\r\n        else {\r\n            k++\r\n        }\r\n\r\n        commentReactionFormListeners(commentCard, commentData)\r\n    }\r\n}\r\n\r\nfunction commentReactionFormListeners(commentCard, commentData) {\r\n    if (commentData.replies && commentData.replies.length) {\r\n        const viewRepliesButton = commentCard.querySelector(\r\n            '.comment-card__view-replies-button'\r\n        )\r\n        viewRepliesButton.addEventListener('click', () => {\r\n            const sibling = commentCard.nextSibling\r\n            let replyContainer = sibling\r\n\r\n            if (sibling.classList.contains(\r\n                'blog-post-page__reply-create-form'\r\n            )) {\r\n                replyContainer = sibling.nextSibling\r\n            }\r\n\r\n            if (replyContainer.classList.contains('-gone')) {\r\n                replyContainer.classList.remove('-gone')\r\n            }\r\n            else {\r\n                replyContainer.classList.add('-gone')\r\n            }\r\n        })\r\n    }\r\n\r\n    const replyButton = commentCard.querySelector(\r\n        '.comment-card__reply-button'\r\n    )\r\n\r\n    if (replyButton) {\r\n        replyButton.addEventListener('click', () => {\r\n            // Remove reply-create-form, if it exists\r\n            // The reply-create-form is created when clicking \r\n            // any comment reply button\r\n            const replyCreateForm = document.querySelector(\r\n                '.blog-post-page__reply-create-form'\r\n            )\r\n\r\n            if (replyCreateForm) {\r\n                if (replyCreateForm.previousSibling !== commentCard) {\r\n                    createCommentCreateForm(commentCard, commentData)\r\n                }\r\n\r\n                replyCreateForm.parentElement.removeChild(replyCreateForm)\r\n            }\r\n            else {\r\n                createCommentCreateForm(commentCard, commentData)\r\n            }\r\n        })\r\n    }\r\n\r\n    const likeButton = commentCard.querySelector(\r\n        '.comment-card__like-button'\r\n    )\r\n    const dislikeButton = commentCard.querySelector(\r\n        '.comment-card__dislike-button'\r\n    )\r\n\r\n    const reaction = commentData.reaction\r\n    let reactionId = reaction ? reaction._id : null\r\n    const reactionType = reaction ? reaction.reaction_type : null\r\n    let liked = false\r\n    let disliked = false\r\n\r\n    if (reactionType === 'Like') {\r\n        liked = true\r\n        likeButton.classList.add('-colorful')\r\n    }\r\n    else if (reactionType === 'Dislike') {\r\n        disliked = true\r\n        dislikeButton.classList.add('-colorful')\r\n    }\r\n\r\n    let responsiveLike = liked\r\n    let responsiveDislike = disliked\r\n    const likeReactionForm = commentCard.querySelector(\r\n        '.comment-card__like-reaction-form'\r\n    )\r\n    likeReactionForm.addEventListener('submit', async (event) => {\r\n        event.preventDefault()\r\n\r\n        updateReactionButtons(\r\n            responsiveDislike, \r\n            responsiveLike, \r\n            [likeButton], \r\n            [dislikeButton]\r\n        )\r\n        responsiveDislike = false\r\n        responsiveLike = !responsiveLike\r\n        \r\n        reactionQueue.enqueue(async () => {\r\n            await fetchReaction(\r\n                likeReactionForm, \r\n                disliked, \r\n                liked, \r\n                reactionId,\r\n                (data) => {\r\n                    reactionId = data.reactionId\r\n                }\r\n            )\r\n            disliked = false\r\n            liked = !liked\r\n        })\r\n\r\n            \r\n    })\r\n\r\n    const dislikeReactionForm = commentCard.querySelector(\r\n        '.comment-card__dislike-reaction-form'\r\n    )\r\n    dislikeReactionForm.addEventListener('submit', async (event) => {\r\n        event.preventDefault()\r\n\r\n        updateReactionButtons(\r\n            responsiveLike, \r\n            responsiveDislike, \r\n            [dislikeButton], \r\n            [likeButton]\r\n        )\r\n        responsiveLike = false\r\n        responsiveDislike = !responsiveDislike\r\n\r\n        reactionQueue.enqueue(async () => {\r\n            await fetchReaction(\r\n                dislikeReactionForm, \r\n                liked, \r\n                disliked, \r\n                reactionId,\r\n                (data) => {\r\n                    reactionId = data.reactionId\r\n                }\r\n            )\r\n            liked = false\r\n            disliked = !disliked\r\n        })\r\n    })\r\n}\r\n\r\nfunction updateReactionButtons(\r\n    toggleReaction, removeReaction, primaryButtons, secondaryButtons\r\n) {\r\n    if (removeReaction) {\r\n        for (const button of primaryButtons) {\r\n            button.classList.remove('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) - 1\r\n        }\r\n    }\r\n    else if (toggleReaction) {\r\n        for (const button of primaryButtons) {\r\n            button.classList.add('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) + 1\r\n        }\r\n\r\n        for (const button of secondaryButtons) {\r\n            button.classList.remove('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) - 1\r\n        }\r\n    }\r\n    else {\r\n        for (const button of primaryButtons) {\r\n            button.classList.add('-colorful')\r\n\r\n            const label = button.querySelector('.icon-element__label')\r\n            label.textContent = parseInt(label.textContent) + 1\r\n        }\r\n    }\r\n}\r\n\r\n// Whenever (toggleReaction && removeReaction) = false, reactionId = null\r\nasync function fetchReaction(\r\n    form, toggleReaction, removeReaction, reactionId, onResponseJson\r\n) {\r\n    const reactionsPath = `/users/${backendData.loginUser.username}/reactions`\r\n\r\n    if (removeReaction) {\r\n        await formFetch(\r\n            `${reactionsPath}/${reactionId}`,\r\n            'delete',\r\n            form,\r\n            onResponseJson\r\n        )\r\n    }\r\n    else if (toggleReaction) {\r\n        await formFetch(\r\n            `${reactionsPath}/${reactionId}`,\r\n            'put',\r\n            form,\r\n            onResponseJson\r\n        )\r\n    }\r\n    else {\r\n        await formFetch(\r\n            reactionsPath,\r\n            'post',\r\n            form,\r\n            onResponseJson\r\n        )\r\n    }  \r\n}\r\n\r\nfunction createCommentCreateForm(replyToCard, replyToData) {\r\n    const form = document.querySelector(\r\n        '.blog-post-page__comment-create-form'\r\n    )\r\n    const formClone = form.cloneNode(true)\r\n    \r\n    const hidden = document.createElement('input')\r\n    hidden.name = 'reply-to'\r\n    hidden.type = 'hidden'\r\n    hidden.value = replyToData._id\r\n    \r\n    formClone.append(hidden)\r\n    formClone.classList.remove(\r\n        'blog-post-page__comment-create-form'\r\n    )\r\n    formClone.classList.add(\r\n        'blog-post-page__reply-create-form'\r\n    )\r\n    commentCreateFormListeners(formClone)\r\n\r\n    const commentString = replyToCard.parentElement\r\n\r\n    commentString.insertBefore(\r\n        formClone, replyToCard.nextSibling\r\n    )\r\n}\r\n\r\nfunction defaultCommentCreateFormListeners() {\r\n    const form = document.querySelector(\r\n        '.blog-post-page__comment-create-form'\r\n    )\r\n    commentCreateFormListeners(form)\r\n}\r\n\r\nfunction commentCreateFormListeners(commentCreateForm) {\r\n    commentCreateForm.addEventListener('submit', (event) => {\r\n        event.preventDefault()\r\n\r\n        formFetch(\r\n            `/blog-posts/${backendData.blogPost._id}/comments`,\r\n            'post',\r\n            commentCreateForm,\r\n            (data) => {\r\n                updateErrorContainer('form-textarea', 'content', data.errors)\r\n\r\n                if (data.errors) {\r\n                    return\r\n                }\r\n                \r\n                if (commentCreateForm.classList.contains(\r\n                    'blog-post-page__reply-create-form'\r\n                )) {\r\n                    let replyContainer = commentCreateForm.nextSibling\r\n\r\n                    if (!replyContainer) {\r\n                        replyContainer = document.createElement('div')\r\n                        replyContainer.classList.add(\r\n                            'blog-post-page__reply-container'\r\n                        )\r\n                        commentCreateForm.parentElement.append(replyContainer)\r\n                    }\r\n\r\n                    const replyCards = replyContainer.querySelectorAll(\r\n                        '.comment-card'\r\n                    )\r\n                    replyContainer.innerHTML = data.renderedHTML\r\n                    const newCommentCard = replyContainer.querySelector(\r\n                        '.comment-card'\r\n                    )\r\n                    commentReactionFormListeners(\r\n                        newCommentCard, \r\n                        data.commentData\r\n                    )\r\n                    \r\n                    for (const replyCard of replyCards) {\r\n                        replyContainer.append(replyCard)\r\n                    }\r\n\r\n                    if (replyContainer.classList.contains('-gone')) {\r\n                        replyContainer.classList.remove('-gone')\r\n                    }\r\n\r\n                    commentCreateForm.parentElement.removeChild(commentCreateForm)\r\n                }\r\n                else {\r\n                    const commentString = document.createElement('div')\r\n                    commentString.classList.add('blog-post-page__comment-string')\r\n                    commentString.innerHTML = data.renderedHTML\r\n                    const newCommentCard = commentString.querySelector(\r\n                        '.comment-card'\r\n                    )\r\n                    commentReactionFormListeners(\r\n                        newCommentCard, \r\n                        data.commentData\r\n                    )\r\n                    commentCreateForm.parentElement.insertBefore(\r\n                        commentString, commentCreateForm.nextSibling\r\n                    )\r\n                }\r\n                \r\n            }\r\n        )\r\n    })\r\n}\r\n\r\nfunction blogPostSetup() {\r\n    const blogPostPage = document.querySelector(\r\n        '.blog-post-page'\r\n    )\r\n\r\n    if (!blogPostPage) {\r\n        return\r\n    }\r\n\r\n    blogPostReactionFormListeners()\r\n    defaultCommentCreateFormListeners()\r\n    allCommentsReactionFormListeners()\r\n}\r\n\r\n\r\nexport {\r\n    blogPostSetup\r\n}","import { formFetch } from '../utils/fetch.js'\r\nimport { initializeTinyMCE } from '../utils/tinyMCEConfig.js'\r\nimport { updateErrorContainer, removeErrorContainer } from '../utils/formError.js'\r\n\r\nfunction blogPostFormTabListeners() {\r\n    const metadata = document.querySelector(\r\n        '.blog-post-form__metadata'\r\n    )\r\n    const content = document.querySelector(\r\n        '.blog-post-form__content'\r\n    )\r\n\r\n    const metadataTab = document.querySelector(\r\n        '.blog-post-form-page__metadata-tab'\r\n    )\r\n\r\n    metadataTab.addEventListener('click', () => {\r\n        if (metadata.classList.contains('-gone')) {\r\n            content.classList.add('-gone')\r\n            metadata.classList.remove('-gone')\r\n        }\r\n    })\r\n\r\n    const contentTab = document.querySelector(\r\n        '.blog-post-form-page__content-tab'\r\n    )\r\n\r\n    contentTab.addEventListener('click', () => {\r\n        if (content.classList.contains('-gone')) {\r\n            metadata.classList.add('-gone')\r\n            content.classList.remove('-gone')\r\n        }\r\n    })\r\n}\r\n\r\nfunction blogPostFormMetadataListeners() {\r\n    const titlePreview = document.querySelector(\r\n        '.blog-post-fragment__title'\r\n    )\r\n    const titleInput = document.getElementById('title')\r\n    titlePreview.textContent = titleInput.value\r\n\r\n    titleInput.addEventListener('change', () => {\r\n        titlePreview.textContent = titleInput.value\r\n    })\r\n}\r\n\r\nfunction blogPostFormSubmitListeners() {\r\n    const blogPostForm = document.querySelector(\r\n        '.blog-post-form'\r\n    )\r\n\r\n    const discardButton = document.querySelector(\r\n        '.navbar__discard-button'\r\n    )\r\n    discardButton.addEventListener('click', () => {\r\n        addPreMethod('discard')\r\n    })\r\n\r\n    const saveButton = document.querySelector(\r\n        '.navbar__save-button'\r\n    )\r\n    saveButton.addEventListener('click', () => {\r\n        addPreMethod('save')\r\n    })\r\n\r\n    const publishButton = document.querySelector(\r\n        '.navbar__publish-button'\r\n    )\r\n    publishButton.addEventListener('click', () => {\r\n        addPreMethod('publish')\r\n    })\r\n\r\n    function addPreMethod(preMethod) {\r\n        const preMethodInputs = blogPostForm.querySelectorAll(\r\n            '.blog-post-form__pre-method'\r\n        )\r\n\r\n        for (const preMethod of preMethodInputs) {\r\n            blogPostForm.removeChild(preMethod)\r\n        }\r\n\r\n        const input = document.createElement('input')\r\n        input.classList.add('blog-post-form__pre-method')\r\n        input.name = 'pre-method'\r\n        input.type = 'hidden'\r\n        input.value = preMethod\r\n        blogPostForm.append(input)\r\n    }\r\n\r\n    // in this case, enter key submission is harmful - prevent it\r\n    blogPostForm.addEventListener('keypress', (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault()\r\n        }\r\n    })\r\n    \r\n    blogPostForm.addEventListener('submit', async (event) => {\r\n        event.preventDefault()\r\n        \r\n        let method = 'PUT'\r\n        let href = window.location.href\r\n\r\n        // blogPost param is empty object if posting, else putting\r\n        if (!Object.keys(backendData.blogPost).length) {\r\n            method = 'POST'\r\n            const hrefWords = href.split('/')\r\n            hrefWords.pop() // remove the ending /new-blog-post\r\n            href = hrefWords.join('/')\r\n        }\r\n\r\n        let errorsOccurred = false\r\n        const inputData = {\r\n            'title': {\r\n                errors: [],\r\n                formCompType: 'form-input'\r\n            },\r\n            'thumbnail': {\r\n                errors: [],\r\n                formCompType: 'form-input'\r\n            },\r\n            'keywords': {\r\n                errors: [],\r\n                formCompType: 'form-textarea'\r\n            },\r\n            'content': {\r\n                errors: [],\r\n                formCompType: 'form-textarea'\r\n            },\r\n            'word-count': {\r\n                errors: [],\r\n                formCompType: null\r\n            }\r\n        }\r\n        \r\n        await formFetch(\r\n            href, \r\n            method, \r\n            blogPostForm,\r\n            (data) => {\r\n                errorsOccurred = true\r\n\r\n                for (const error of data.errors) {\r\n                    inputData[error.path].errors.push(error)\r\n                }\r\n\r\n                inputData.content.errors.push(\r\n                    ...inputData['word-count'].errors\r\n                )\r\n                delete inputData['word-count']\r\n\r\n                for (const [k, v] of Object.entries(inputData)) {\r\n                    updateErrorContainer(v.formCompType, k, v.errors)\r\n                }\r\n            }\r\n        )\r\n\r\n        if (!errorsOccurred) {\r\n            for (const [k, v] of Object.entries(inputData)) {\r\n                removeErrorContainer(v.formCompType, k)\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction blogPostFormSizing() {\r\n    const leftBody = document.querySelector(\r\n        '.blog-post-form-page__left .blog-post-form-page__body'\r\n    )\r\n    const rightBody = document.querySelector(\r\n        '.blog-post-form-page__right .blog-post-form-page__body'\r\n    )\r\n    rightBody.style.maxHeight = leftBody.offsetHeight + 'px'\r\n    rightBody.style.maxWidth = leftBody.offsetWidth + 'px'\r\n}\r\n\r\n// Function blogPostFormSizing must be called before function \r\n// blogPostFormMetadataEventListeners\r\nfunction blogPostFormSetup() {\r\n    const blogPostFormPage = document.querySelector(\r\n        '.blog-post-form-page'\r\n    )\r\n\r\n    if (!blogPostFormPage) {\r\n        return\r\n    }\r\n\r\n    // TinyMCE init must occur before the form submit listener is set \r\n    // This allows the editor's submit listener to trigger first\r\n    initializeTinyMCE('.tinymce-app')\r\n    blogPostFormSizing()\r\n    blogPostFormTabListeners()\r\n    blogPostFormMetadataListeners()\r\n    blogPostFormSubmitListeners()\r\n    \r\n}\r\n\r\nexport {\r\n    blogPostFormSetup\r\n}","import { updateErrorContainer } from '../utils/formError.js'\r\n\r\nfunction loggingFormSetup() {\r\n    const loggingPage = document.querySelector(\r\n        '.logging-page'\r\n    )\r\n\r\n    if (!loggingPage) {\r\n        return\r\n    }\r\n\r\n    const errors = backendData.errors\r\n    const inputData = {\r\n        'username': {\r\n            errors: [],\r\n            formCompType: 'form-input'\r\n        },\r\n        'password': {\r\n            errors: [],\r\n            formCompType: 'form-input'\r\n        },\r\n    }\r\n    const loggingForm = loggingPage.querySelector(\r\n        '.logging-form'\r\n    )\r\n    const pathSegments = loggingForm.action.split('/')\r\n    const suffix = pathSegments[pathSegments.length - 1]\r\n\r\n    if (suffix === 'login') {\r\n        // Flash errors are just strings\r\n        // Compatibility demands object with 'msg' prop\r\n        inputData.password.errors = errors.map(error => { \r\n            return {msg: error} \r\n        })\r\n    }\r\n    else {\r\n        for (const error of errors) {\r\n            inputData[error.path].errors.push(error)\r\n        }\r\n    }\r\n\r\n    for (const [k, v] of Object.entries(inputData)) {\r\n        updateErrorContainer(v.formCompType, k, v.errors)\r\n    }\r\n}\r\n\r\nexport {\r\n    loggingFormSetup\r\n}\r\n\r\n","function userBlogPostsSearchbarListeners() {\r\n    const searchbar = document.querySelector(\r\n        '.user-blog-posts-page__searchbar .searchbar__input'\r\n    )\r\n\r\n    searchbar.addEventListener('input', (event) => {\r\n        const blogPostItems = document.querySelectorAll('.blog-post-item')\r\n        const searchValue = event\r\n            .currentTarget\r\n            .value\r\n            .trim()\r\n            .toLowerCase()\r\n\r\n        if (searchValue === '') {\r\n            for (const item of blogPostItems) {\r\n                item.classList.remove('-gone')\r\n            }\r\n        }\r\n        else {\r\n            for (const item of blogPostItems) {\r\n                const title = item.querySelector('.blog-post-item__title')\r\n                    .textContent\r\n                    .toLowerCase()\r\n                const regex = new RegExp(searchValue)\r\n                \r\n                if (regex.test(title))\r\n                    item.classList.remove('-gone')\r\n                else {\r\n                    item.classList.add('-gone')\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction userBlogPostsSortSelectorListeners() {\r\n    const sortSelector = document.querySelector(\r\n        '.user-blog-posts-page__sort-selector'\r\n    )\r\n    const publishedList = document.querySelector(\r\n        '.user-blog-posts__published.blog-post-list'\r\n    )\r\n    const unpublishedList = document.querySelector(\r\n        '.user-blog-posts__unpublished.blog-post-list'\r\n    )\r\n\r\n    sortSelector.addEventListener('change', (event) => {\r\n        const sortValue = event\r\n            .target\r\n            .value\r\n            .trim()\r\n            .toLowerCase()\r\n        \r\n        sortBlogPostList(\r\n            sortValue, \r\n            publishedList,\r\n            true\r\n        )\r\n        sortBlogPostList(\r\n            sortValue, \r\n            unpublishedList\r\n        )\r\n        \r\n    })\r\n}\r\n\r\nfunction sortBlogPostList(sortBy, blogPostList, published=false) {\r\n    const blogPostItems = Array.from(\r\n        blogPostList.querySelectorAll('.blog-post-item')\r\n    )\r\n\r\n    if (sortBy === 'title') {\r\n        blogPostItems.sort((a, b) => {\r\n            const titleA = a.querySelector(\r\n                '.blog-post-item__title'\r\n            ).textContent\r\n            const titleB = b.querySelector(\r\n                '.blog-post-item__title'\r\n            ).textContent\r\n\r\n            return titleB.localeCompare(titleA)\r\n        })\r\n    }\r\n    else if (sortBy === 'last-mod-date') {\r\n        blogPostItems.sort((a, b) => {\r\n            const dateA = a.querySelector(\r\n                '.blog-post-item__last-modified'\r\n            ).textContent\r\n            const dateB = b.querySelector(\r\n                '.blog-post-item__last-modified'\r\n            ).textContent\r\n\r\n            return compareDateStrings(dateB, dateA)\r\n        })\r\n    }\r\n    else if (published) {\r\n        switch (sortBy) {\r\n            case 'publish-date':\r\n                blogPostItems.sort((a, b) => {\r\n                    const dateA = a.querySelector(\r\n                        '.blog-post-item__published'\r\n                    ).textContent\r\n                    const dateB = b.querySelector(\r\n                        '.blog-post-item__published'\r\n                    ).textContent\r\n\r\n                    return compareDateStrings(dateB, dateA)\r\n                })\r\n                break \r\n            case 'likes':\r\n                blogPostItems.sort((a, b) => {\r\n                    const likesA = a.querySelector(\r\n                        '.blog-post-item__likes .icon-element__label'\r\n                    ).textContent\r\n                    const likesB = b.querySelector(\r\n                        '.blog-post-item__likes .icon-element__label'\r\n                    ).textContent\r\n\r\n                    return parseInt(likesB) - parseInt(likesA)\r\n                })\r\n                break\r\n            case 'dislikes':\r\n                blogPostItems.sort((a, b) => {\r\n                    const dislikesA = a.querySelector(\r\n                        '.blog-post-item__dislikes .icon-element__label'\r\n                    ).textContent\r\n                    const dislikesB = b.querySelector(\r\n                        '.blog-post-item__dislikes .icon-element__label'\r\n                    ).textContent\r\n\r\n                    return parseInt(dislikesB) - parseInt(dislikesA)\r\n                })\r\n                break\r\n            case 'total-comments':\r\n                blogPostItems.sort((a, b) => {\r\n                    const commentsA = a.querySelector(\r\n                        '.blog-post-item__total-comments .icon-element__label'\r\n                    ).textContent\r\n                    const commentsB = b.querySelector(\r\n                        '.blog-post-item__total-comments .icon-element__label'\r\n                    ).textContent\r\n\r\n                    return parseInt(commentsB) - parseInt(commentsA)\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    blogPostList.innerHTML = ''\r\n    blogPostList.append(...blogPostItems)\r\n}\r\n\r\nfunction compareDateStrings(a, b) {\r\n    const dateA = a\r\n        .split('-')\r\n        .map((str) => parseInt(str))\r\n    const dateB = b\r\n        .split('-')\r\n        .map((str) => parseInt(str))\r\n\r\n    let result = 0\r\n\r\n    for (let i=0; i<dateA.length; i++) {\r\n        if (dateA[i] < dateB[i]) {\r\n            result = -1\r\n            break\r\n        }\r\n        else if (dateA[i] > dateB[i]) {\r\n            result = 1\r\n            break\r\n        }\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nfunction userBlogPostsTabListeners() {\r\n    const published = document.querySelector(\r\n        '.user-blog-posts__published'\r\n    )\r\n    const unpublished = document.querySelector(\r\n        '.user-blog-posts__unpublished'\r\n    )\r\n    \r\n    const publishedTab = document.querySelector(\r\n        '.user-blog-posts__published-tab'\r\n    )\r\n\r\n    publishedTab.addEventListener('click', () => {\r\n        if (published.classList.contains('-gone')) {\r\n            unpublished.classList.add('-gone')\r\n            published.classList.remove('-gone')\r\n        }\r\n    })\r\n\r\n    const unpublishedTab = document.querySelector(\r\n        '.user-blog-posts__unpublished-tab'\r\n    )\r\n\r\n    unpublishedTab.addEventListener('click', () => {\r\n        if (unpublished.classList.contains('-gone')) {\r\n            published.classList.add('-gone')\r\n            unpublished.classList.remove('-gone')\r\n        }\r\n    }) \r\n}\r\n\r\nfunction userBlogPostsListListeners(blogPostList) {\r\n    const items = blogPostList.querySelectorAll(\r\n        '.blog-post-item'\r\n    )\r\n    const rightPanel = document.querySelector(\r\n        '.user-blog-posts__right'\r\n    )\r\n\r\n    for (const item of items) {\r\n\r\n        item.addEventListener('click', (event) => {\r\n            onItemClick(event, rightPanel)\r\n        })\r\n\r\n        const deleteButton = item.querySelector(\r\n            '.blog-post-item__delete-button'\r\n        )\r\n        deleteButton.addEventListener('click', (event) => {\r\n            event.stopPropagation()\r\n            onDeleteButtonClick(item, blogPostList)\r\n        })\r\n    }\r\n}\r\n\r\nfunction onItemClick(event, rightPanel) {\r\n    const itemId = event.currentTarget.id\r\n    const blogPosts = [\r\n        ...backendData.publishedBlogPosts,\r\n        ...backendData.unpublishedBlogPosts\r\n    ]\r\n    const blogPost = blogPosts.find(\r\n        (blogPost) => blogPost._id.toString() === itemId\r\n    )\r\n\r\n    const fragmentTitle = document.querySelector(\r\n        '.blog-post-fragment__title'\r\n    )\r\n    fragmentTitle.innerHTML = blogPost.title\r\n\r\n    const fragmentThumbnail = document.querySelector(\r\n        '.blog-post-fragment__thumbnail'\r\n    )\r\n    fragmentThumbnail.innerHTML = ''\r\n\r\n    if (blogPost.thumbnail) {\r\n        const pic = blogPost.thumbnail\r\n        const dataUri = `data:${pic.contentType};base64,${pic.data}`\r\n        const img = document.createElement('img')\r\n        img.src = dataUri\r\n        \r\n        fragmentThumbnail.classList.remove('-empty')\r\n        fragmentThumbnail.append(img)\r\n    }\r\n    else {\r\n        fragmentThumbnail.classList.add('-empty')\r\n        fragmentThumbnail.textContent = 'Your thumbnail appears here'\r\n    }\r\n\r\n    const fragmentContent = document.querySelector(\r\n        '.blog-post-fragment__content'\r\n    )\r\n    fragmentContent.innerHTML = blogPost.content\r\n\r\n    rightPanel.classList.remove('-hidden')\r\n}\r\n\r\nfunction onDeleteButtonClick(item, blogPostList) {\r\n    fetch(window.location.href + '/' + item.id, { method: 'DELETE' })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error(`HTTP error - Status: ${res.status}`)\r\n            }\r\n            \r\n            // remove deleted blog post from view\r\n            blogPostList.removeChild(item)\r\n            \r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })   \r\n}\r\n\r\nfunction userBlogPostsSetup() {\r\n    const userBlogPostsPage = document.querySelector(\r\n        '.user-blog-posts-page'\r\n    )\r\n\r\n    if (!userBlogPostsPage) {\r\n        return\r\n    }\r\n\r\n    userBlogPostsSearchbarListeners()\r\n    userBlogPostsSortSelectorListeners()\r\n    userBlogPostsTabListeners()\r\n\r\n    const publishedList = document.querySelector(\r\n        '.user-blog-posts__published'\r\n    )\r\n    const unpublishedList = document.querySelector(\r\n        '.user-blog-posts__unpublished'\r\n    )\r\n    userBlogPostsListListeners(publishedList)\r\n    userBlogPostsListListeners(unpublishedList)\r\n}\r\n\r\nexport {\r\n    userBlogPostsSetup\r\n}","import { formFetch } from '../utils/fetch.js'\r\nimport { updateErrorContainer } from '../utils/formError.js'\r\n\r\nfunction profileFormSetup() {\r\n    const profilePage = document.querySelector(\r\n        '.profile-page'\r\n    )\r\n\r\n    if (!profilePage) {\r\n        return\r\n    }\r\n\r\n    const profileEditButton = document.querySelector(\r\n        '.profile__edit-button'\r\n    )\r\n    const secondary = document.querySelector(\r\n        '.profile__secondary'\r\n    )\r\n    const profileForm = document.querySelector(\r\n        '.profile-form'\r\n    )\r\n\r\n    profileEditButton.addEventListener('click', () => {\r\n        if (profileForm.classList.contains('-gone')) {\r\n            secondary.classList.add('-gone')\r\n            profileForm.classList.remove('-gone')\r\n        }\r\n    })\r\n\r\n    const profileFormCancelButton = document.querySelector(\r\n        '.profile-form__cancel'\r\n    )\r\n\r\n    profileFormCancelButton.addEventListener('click', () => {\r\n        if (secondary.classList.contains('-gone')) {\r\n            profileForm.classList.add('-gone')\r\n            secondary.classList.remove('-gone')\r\n\r\n            const { username, bio, keywords } = backendData.user \r\n\r\n            const usernameInput = document.getElementById('username')\r\n            usernameInput.value = username\r\n\r\n            if (bio) {\r\n                const bioInput = document.getElementById('bio')\r\n                bioInput.value = bio\r\n            }\r\n\r\n            if (keywords.length) {\r\n                const keywordsInput = document.getElementById('keywords')\r\n                keywordsInput.value = keywords.join(' ')\r\n            } \r\n        }\r\n    })\r\n\r\n    profileForm.addEventListener('submit', (event) => {\r\n        event.preventDefault()\r\n\r\n        formFetch(\r\n            `/users/${backendData.user.username}`, \r\n            'PUT', \r\n            profileForm,\r\n            (data) => {\r\n                const inputData = {\r\n                    'profile-pic': {\r\n                        errors: [],\r\n                        formCompType: 'form-input'\r\n                    },\r\n                    'username': {\r\n                        errors: [],\r\n                        formCompType: 'form-input'\r\n                    },\r\n                    'bio': {\r\n                        errors: [],\r\n                        formCompType: 'form-textarea'\r\n                    },\r\n                    'keywords': {\r\n                        errors: [],\r\n                        formCompType: 'form-textarea'\r\n                    }\r\n                }\r\n\r\n                for (const error of data.errors) {\r\n                    inputData[error.path].errors.push(error)\r\n                }\r\n\r\n                for (const [k, v] of Object.entries(inputData)) {\r\n                    updateErrorContainer(v.formCompType, k, v.errors)\r\n                }\r\n            }    \r\n        )\r\n    })\r\n}\r\n\r\nexport {\r\n    profileFormSetup\r\n}","async function formFetch(\r\n    href, method, form, onResponseJson=null\r\n) {\r\n    const res = await fetch(\r\n        href, \r\n        {\r\n            method,\r\n            body: new FormData(form)\r\n        }\r\n    )\r\n    \r\n    // Input error statuses should be handled here\r\n    // Only input error status currently is 400\r\n    if (!res.ok && res.status !== 400) {\r\n        throw new Error(`HTTP error - Status 500`)\r\n    }\r\n\r\n    if (res.redirected) {\r\n        if (window.location.href === res.url) {\r\n            window.location.reload()\r\n        }\r\n        else {\r\n            window.location.href = res.url\r\n        }\r\n    }\r\n\r\n    const contentType = res.headers.get('content-type');\r\n\r\n    if (\r\n        !contentType \r\n        || !contentType.includes('application/json')\r\n        || !onResponseJson\r\n    ) {\r\n        return\r\n    }\r\n\r\n    const data = await res.json()\r\n    onResponseJson(data)\r\n}\r\n\r\nexport {\r\n    formFetch\r\n}","function updateErrorContainer(formCompType, inputId, errors) {\r\n    // remove previous errors if present\r\n    removeErrorContainer(formCompType, inputId)\r\n\r\n    const errorContainerClassId = `${formCompType}__error-container`\r\n    const inputField = document.getElementById(inputId)\r\n    const inputContainer = inputField.parentElement\r\n\r\n    if (errors) {\r\n        const errorContainer = document.createElement('div')\r\n        errorContainer.classList.add(errorContainerClassId)\r\n\r\n        for (const error of errors) {\r\n            const errorDiv = document.createElement('div')\r\n            errorDiv.classList.add(`${formCompType}__error`)\r\n            errorDiv.textContent = error.msg\r\n            errorContainer.append(errorDiv)\r\n        }\r\n\r\n        inputContainer.append(errorContainer)\r\n    }\r\n}\r\n\r\nfunction removeErrorContainer(formCompType, inputId) {\r\n    const errorContainerClassId = `${formCompType}__error-container`\r\n    const inputField = document.getElementById(inputId)\r\n    const inputContainer = inputField.parentElement\r\n    const errorContainer = inputContainer.querySelector(\r\n        '.' + errorContainerClassId\r\n    )\r\n\r\n    if (errorContainer) {\r\n        inputContainer.removeChild(errorContainer)\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    updateErrorContainer,\r\n    removeErrorContainer\r\n}","function Queue() {\r\n    let front = null\r\n    let end = null\r\n\r\n    function Node(value, next=null) {\r\n        return { value, next }\r\n    }\r\n\r\n    function enqueue(value) {\r\n        const node = Node(value)\r\n\r\n        if (!front) {\r\n            front = node\r\n            end = node\r\n        }\r\n        else {\r\n            end.next = node\r\n            end = node\r\n        }\r\n    }\r\n\r\n    function dequeue() {\r\n        if (!front) {\r\n            return undefined\r\n        }\r\n        \r\n        const removedNode = front\r\n        front = front.next\r\n        \r\n        if (!front) {\r\n            end = null\r\n        }\r\n\r\n        return removedNode.value\r\n    }\r\n\r\n    function isEmpty() {\r\n        return front === null\r\n    }\r\n\r\n    return {enqueue, dequeue, isEmpty}\r\n}\r\n\r\nfunction PromiseQueue() {\r\n    const queue = Queue()\r\n    let isProcessing = false\r\n\r\n    async function enqueue(value) {\r\n        queue.enqueue(value)\r\n\r\n        if (isProcessing) {\r\n            return\r\n        }\r\n\r\n        isProcessing = true\r\n\r\n        while (!queue.isEmpty()) {\r\n            const operation = queue.dequeue()\r\n            await operation()\r\n        }\r\n\r\n        isProcessing = false\r\n    }\r\n\r\n    return {enqueue}\r\n}\r\n\r\n\r\nexport {\r\n    PromiseQueue\r\n}","function initializeTinyMCE(selector) {\r\n    const tinyMCEElement = document.querySelector(selector)\r\n\r\n    if (!tinyMCEElement) {\r\n        return\r\n    }\r\n\r\n    // Variable backendData is data provided by backend for rendering\r\n    // See root.pug for the script that defines it\r\n    let initialContent = backendData.blogPost.content || ''\r\n    \r\n    tinymce.init({\r\n        selector: selector,\r\n        plugins: 'lists link image table code help wordcount',\r\n        menubar: 'file edit view insert table tools help',\r\n        toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | numlist bullist',\r\n        promotion: false,\r\n        image_file_types: 'jpeg,jpg,png,webp,gif',\r\n        setup: (editor) => {\r\n            editor.on('init', () => {\r\n                editor.setContent(initialContent)\r\n                const preview = document.querySelector('.blog-post-fragment__content')\r\n                preview.innerHTML = editor.getContent()\r\n            })\r\n    \r\n            editor.on('change', () => {\r\n                editor.save()\r\n                const preview = document.querySelector('.blog-post-fragment__content')\r\n                preview.innerHTML = editor.getContent()\r\n            })\r\n\r\n            editor.on('submit', () => {\r\n                const wordCountInput = document.getElementById('word-count')\r\n                wordCountInput.value = editor.plugins.wordcount.getCount()\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    initializeTinyMCE\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { navbarListeners, sidebarListeners } from './layouts/toolbars.js'\r\nimport { loggingFormSetup } from './pages/loggingForm.js'\r\nimport { blogPostSetup } from './pages/blogPost.js'\r\nimport { blogPostFormSetup } from './pages/blogPostForm.js'\r\nimport { profileFormSetup } from './pages/userProfile.js'\r\nimport { userBlogPostsSetup } from './pages/userBlogPosts.js'\r\n\r\n// layout setup\r\nnavbarListeners()\r\nsidebarListeners(\r\n    '.account-sidebar', \r\n    '.navbar__account-button'\r\n)\r\nsidebarListeners(\r\n    '.content-sidebar', \r\n    '.navbar__content-button'\r\n)\r\n\r\n// page setup\r\nloggingFormSetup()\r\nblogPostSetup()\r\nblogPostFormSetup()\r\nprofileFormSetup()\r\nuserBlogPostsSetup()\r\n"],"names":[],"sourceRoot":""}